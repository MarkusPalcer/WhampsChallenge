<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Newtonsoft.Json" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ import namespace="Newtonsoft.Json.Linq" #>
<#@ output extension=".cs" #>
// Generated file, so ReSharper-Checks are disabled. 
// ReSharper disable all

using System;
using System.Collections.Generic; 
using Newtonsoft.Json.Linq; 
using WhampsChallenge.Common;

using WhampsChallenge.Messaging.Common;

<#	var fileName = Path.GetFullPath(Host.ResolvePath("..\\..\\..\\Library\\common\\contract.json")); #>
<#  var file = JsonConvert.DeserializeObject<Dictionary<string,JObject>>(File.ReadAllText(fileName)); #>

<#  foreach (var _kvp in file) { #>
namespace WhampsChallenge.Messaging.<#= _kvp.Key #>.Actions {
	using WhampsChallenge.<#= _kvp.Key #>.Actions;

	public class ActionDecoder : IActionDecoder {
		private readonly Dictionary<string, Func<JObject, WhampsChallenge.Common.IAction>> _decoders = 
			new Dictionary<string, Func<JObject, WhampsChallenge.Common.IAction>> {
<#		foreach (var action in ((JObject)_kvp.Value["Actions"]).Properties()) { #>
				{ "<#= action.Name #>", Decode<#= action.Name #> },
<#      } #>
			};

		public WhampsChallenge.Common.IAction Decode(JObject message)
	    {
	        return _decoders[message["Action"].Value<string>()](message);
	    }

<#		foreach (var action in ((JObject)_kvp.Value["Actions"]).Properties()) { #>
		private static WhampsChallenge.Common.IAction Decode<#= action.Name #>(JObject message) {
			return message.Value<<#= action.Name #>>();
		}
<#      } #>

	}
}

<# } #>