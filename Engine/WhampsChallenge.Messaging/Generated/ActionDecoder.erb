<%
	require 'json'

	file = nil
	File.open('../../Library/common/contract.json', 'r') do |f|
		file = JSON.load(f)
	end
%>
// Generated file, so ReSharper-Checks are disabled. 
// ReSharper disable all

using System;
using System.Collections.Generic; 
using Newtonsoft.Json.Linq; 
using WhampsChallenge.Core.Common;

using WhampsChallenge.Messaging.Common;

<% file.each_pair do |level, leveldata| %>
namespace WhampsChallenge.Messaging.<%= level %>.Actions {
	using WhampsChallenge.Core.<%= level %>.Actions;

	public class ActionDecoder : IActionDecoder {
		private readonly Dictionary<string, Func<JObject, WhampsChallenge.Core.Common.IAction>> _decoders = 
			new Dictionary<string, Func<JObject, WhampsChallenge.Core.Common.IAction>> {
<%    leveldata['Actions'].each_pair do |action, actiondata| %>
				{ "<%= action %>", Decode<%= action %> },
<%    end %>
			};

		public WhampsChallenge.Core.Common.IAction Decode(JObject message)
	    {
	        return _decoders[message["Action"].Value<string>()](message);
	    }

<%    leveldata['Actions'].each_pair do |action, actiondata| %>
		private static WhampsChallenge.Core.Common.IAction Decode<%= action %>(JObject message) {
			return message.ToObject<<%= action %>>();
		}
<%    end %>

	}
}

<% end %>